<Window x:Class="NafraProjetos.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:controls="clr-namespace:System.Windows.Controls;assembly=DotNetProjects.Input.Toolkit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:NafraProjetos"
        mc:Ignorable="d"
        d:DesignHeight="768" d:DesignWidth="1024" Loaded="Window_Loaded" Width="1024"
        Height="768" MaxWidth="1024" MaxHeight="768" MinWidth="1024" MinHeight="768" FontFamily="Lucida Sans Unicode"
        Title="MainWindow" WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True"
        Background="Transparent" MouseLeftButtonDown="OnMouseLeftButtonDown" MouseLeftButtonUp="OnMouseLeftButtonUp" MouseMove="OnMouseMove" Cursor="SizeAll">

    <Window.Resources>
        <Style TargetType="TabItem">
            <Setter Property="Foreground" Value="#D1DBE4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="4" BorderBrush="#2596BE" CornerRadius="5" Margin="1,0">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="0,0,0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#40596F" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#313437" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="BrushStyle" StartPoint="0,0" EndPoint="0,1" Opacity="0.75">
            <GradientStop Color="#516473" Offset="0.0"/>
            <GradientStop Color="#879BAA" Offset="1.5"/>
        </LinearGradientBrush>
        <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{StaticResource BrushStyle}"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="Margin" Value="0 10 0 0"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Lucida Sans Unicode"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="ColumnWidth" Value="*"/>
        </Style>
        <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#D1DBE4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Margin" Value="15 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#E2D7AC"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="#313437"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border"
                            Padding="0 2"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1"
                                                      Grid.Row="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#544E32"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#544E32"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Button" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="Beige"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10 0 10 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"
                                CornerRadius="5"
                                Background="#879BAA">
                                <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#2596BE"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#2596BE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#D1DBE4"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonLabel" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="Beige"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10 0 10 0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"
                                CornerRadius="5"
                                Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              TextElement.FontWeight="Bold"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#2596BE"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#D1DBE4"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#40596F"/>
            <Setter Property="Foreground" Value="#D1DBE4"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="Padding" Value="10 0 10 0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                            CornerRadius="5"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#D1DBE4" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#D1DBE4" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#40596F"/>
            <Setter Property="Foreground" Value="#D1DBE4"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="Padding" Value="10 0 10 0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border"
                            CornerRadius="5"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#D1DBE4" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#D1DBE4" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="#D1DBE4"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="LabelLink" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="#D1DBE4"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <ImageBrush x:Key="LigarOFF" ImageSource="resources/PNG/LigarOFF.png"/>
        <ImageBrush x:Key="LigarON" ImageSource="Resources/PNG/LigarON.png"/>
        <Style x:Key="ButtonLigar" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource LigarOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LigarON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LigarON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="VoltarOFF" ImageSource="Resources/PNG/VoltarOFF.png"/>
        <ImageBrush x:Key="VoltarON" ImageSource="Resources/PNG/VoltarON.png"/>
        <Style x:Key="ButtonVoltar" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource VoltarOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VoltarON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VoltarON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="AdicionarOFF" ImageSource="Resources/PNG/AdicionarOFF.png"/>
        <ImageBrush x:Key="AdicionarON" ImageSource="Resources/PNG/AdicionarON.png"/>
        <Style x:Key="ButtonAdicionar" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource AdicionarOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource AdicionarON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource AdicionarON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="EditarOFF" ImageSource="Resources/PNG/EditarOFF.png"/>
        <ImageBrush x:Key="EditarON" ImageSource="Resources/PNG/EditarON.png"/>
        <Style x:Key="ButtonEditar" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource EditarOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource EditarON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource EditarON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="ExcluirOFF" ImageSource="Resources/PNG/ExcluirOFF.png"/>
        <ImageBrush x:Key="ExcluirON" ImageSource="Resources/PNG/ExcluirON.png"/>
        <Style x:Key="ButtonExcluir" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource ExcluirOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ExcluirON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ExcluirON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="PesquisarOFF" ImageSource="Resources/PNG/PesquisarOFF.png"/>
        <ImageBrush x:Key="PesquisarON" ImageSource="Resources/PNG/PesquisarON.png"/>
        <Style x:Key="ButtonPesquisar" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource PesquisarOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource PesquisarON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource PesquisarON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="ProcurarOFF" ImageSource="Resources/PNG/ProcurarOFF.png"/>
        <ImageBrush x:Key="ProcurarON" ImageSource="Resources/PNG/ProcurarON.png"/>
        <Style x:Key="ButtonProcurar" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource ProcurarOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ProcurarON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ProcurarON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="SalvarOFF" ImageSource="Resources/PNG/SalvarOFF.png"/>
        <ImageBrush x:Key="SalvarON" ImageSource="Resources/PNG/SalvarON.png"/>
        <Style x:Key="ButtonSalvar" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource SalvarOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SalvarON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SalvarON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="ImprimirOFF" ImageSource="Resources/PNG/ImprimirOFF.png"/>
        <ImageBrush x:Key="ImprimirON" ImageSource="Resources/PNG/ImprimirON.png"/>
        <Style x:Key="ButtonImprimir" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource ImprimirOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ImprimirON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ImprimirON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="InicioOFF" ImageSource="Resources/PNG/InicioOFF.png"/>
        <ImageBrush x:Key="InicioON" ImageSource="Resources/PNG/InicioON.png"/>
        <Style x:Key="ButtonInicio" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 15 15 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource InicioOFF}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource InicioON}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource InicioON}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Grid x:Name="print">

        <Border CornerRadius="20"
                BorderThickness="4"
                BorderBrush="#2596BE"
                Opacity="0.95">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#313437" Offset="0.0"/>
                    <GradientStop Color="#516473" Offset="1.5"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        <TabControl x:Name="TabControl1" Margin="10,22,10,55" BorderThickness="0" Background="#FF313437">

            <TabItem x:Name="TP_Login" Header="LOGIN" FontSize="18">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="333*"/>
                        <ColumnDefinition Width="667*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="E-mail" Margin="48,208,379,401" Width="240" Grid.Column="1"/>
                    <TextBox x:Name="TB_LoginEmail" Margin="48,244,379,365" Text="nafraprojetos@gmail.com" Width="240" Grid.Column="1"/>
                    <Label Content="Senha" Margin="48,288,379,321" Width="240" Grid.Column="1"/>
                    <PasswordBox x:Name="TB_LoginSenha" Margin="47,325,380,284" Width="240" Password="1234" Grid.Column="1"/>
                    <Button Style="{DynamicResource Button}" x:Name="B_LoginLogar" Content="Logar" Click="B_LoginLogar_Click" Margin="47,409,380,200" Grid.Column="1"/>
                    <Label Content="Não tem uma conta?" Margin="48,448,468,161" Width="151" Grid.Column="1"/>
                    <Button Style="{DynamicResource ButtonLabel}" x:Name="B_LoginLogar_Copy1" Content="Esqueceu a senha?" Click="Recuperar_Click" Margin="0,369,379,240" Grid.Column="1"/>
                    <Button Style="{DynamicResource ButtonLabel}" x:Name="B_LoginLogar_Copy" Content="Inscreva-se" Click="CadastroCadastrar_Click" Margin="0,448,385,161" Grid.Column="1"/>

                </Grid>
            </TabItem>

            <TabItem x:Name="TP_Recuperar" Header="RECUPERAR" FontSize="18">
                <Grid>
                    <Label Content="Digite o e-mail para recuperar a senha!" Margin="353,202,353,394" Width="294"/>
                    <TextBox x:Name="TB_RecuperarEmail" Margin="353,242,353,354" Text="nafraprojetos@gmail.com" Width="294"/>
                    <Button Style="{DynamicResource Button}" Content="Recuperar" Width="294" Margin="353,294,353,302" Click="B_Recuperar_Click"/>
                </Grid>

            </TabItem>

            <TabItem x:Name="TP_Cadastro" Header="CADASTRO" FontSize="18">
                <Grid>
                    <Label Content="Nome" Margin="0,61,0,535" Width="240"/>
                    <TextBox x:Name="TB_CadastroNome" Margin="380,101,380,495" Text="José Nathan" Width="240"/>
                    <Label Content="Sobrenome" Margin="380,141,380,455" Width="240"/>
                    <TextBox x:Name="TB_CadastroSobrenome" Margin="380,181,380,415" Text="Franco Padilha" Width="240"/>
                    <Label Content="Telefone" Margin="380,221,380,375" Width="240"/>
                    <TextBox x:Name="TB_CadastroTelefone" Margin="380,261,380,335" Width="240"/>
                    <Label Content="E-mail" Margin="380,301,380,295" Width="240"/>
                    <TextBox x:Name="TB_CadastroEmail" Margin="380,341,380,255" Text="nafraprojetos@gmail.com" Width="240"/>
                    <Label Content="Senha" Margin="380,381,380,215" Width="240"/>
                    <PasswordBox x:Name="TB_CadastroSenha" Margin="380,421,380,175" Width="240" Password="1234"/>
                    <Button Style="{DynamicResource Button}" x:Name="B_CadastroCadastrar" Content="Cadastrar" Width="240" Margin="380,475,380,121" Click="B_CadastroCadastrar_Click"/>
                </Grid>
            </TabItem>

            <TabItem x:Name="TP_Jobs" Header="MEUS JOBS" FontSize="18">
                <Grid>
                    <Button Style="{DynamicResource ButtonAdicionar}" Height="40" Margin="10,30,950,566" Click="B_Adicionar_Click" Width="40"/>
                    <Button Style="{DynamicResource ButtonEditar}" Height="40" Margin="55,30,905,566" Click="Editar_Click" Width="40"/>
                    <Button Style="{DynamicResource ButtonExcluir}" Height="40" Margin="100,30,860,566" Click="B_Excluir_Click" Width="40"/>
                    <DataGrid x:Name="DG_Jobs" Margin="10,90,10,55"/>
                    <Label Content="Gerar memorial de cálculo de hidrantes?" Margin="10,586,704,10" Width="286"/>
                    <Button Style="{DynamicResource ButtonLabel}" Content="Aqui!" Click="B_Hidrante_Click" Margin="0,593,667,16"/>
                </Grid>
            </TabItem>

            <TabItem x:Name="TP_Adicionar" Header="DETALHE JOBS" FontSize="18">
                <Grid>
                    <Label Content="Ocupação principal" Margin="18,25,696,584" Width="286"/>
                    <controls:AutoCompleteBox x:Name="tb" FontSize="14" Height="40" Width="769" HorizontalAlignment="Left" Margin="168,25,0,584" VerticalContentAlignment="Center"/>
                    <!--<TextBox x:Name="tb" FontSize="14" Height="40" Width="769" HorizontalAlignment="Left" Margin="168,25,0,584" VerticalContentAlignment="Center"/>-->

                    <ComboBox x:Name="CB_classificacao" Margin="400,5,10,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" IsEditable="True" Visibility="Hidden" />
                    <Button Style="{DynamicResource ButtonPesquisar}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="40" Width="40" Margin="942,25,0,0" FontSize="14" Click="B_Classficacao_Click" BorderThickness="0,0,0,0"/>
                    <DataGrid x:Name="DG_Ocupacao" Margin="18,70,18,505"/>

                    <Label Content="Área (m²)" Margin="18,274,892,335" Width="90"/>

                    <Label Content="Existente" Margin="108,234,802,375" Width="90"/>
                    <TextBox x:Name="TB_AdicionarAreaExistente" Margin="108,274,802,335" Text="0" Width="90" KeyUp="Somar"/>

                    <Label Content="Nova" Margin="203,234,707,375" Width="90"/>
                    <TextBox x:Name="TB_AdicionarAreaNova" Margin="203,274,707,335" Text="0" Width="90" KeyUp="Somar"/>

                    <Label Content="Total" Margin="298,234,612,375" Width="90"/>
                    <TextBox x:Name="TB_AdicionarAreaTotal" Margin="298,274,612,335" Text="0" Width="90" IsEnabled="False"/>

                    <Label Content="Altura (m)" Margin="18,189,892,420" Width="90"/>

                    <Label Content="Altura" Margin="108,149,802,460" Width="90"/>
                    <TextBox x:Name="TB_AdicionarAtura" Margin="108,189,802,420" Text="0" Width="90" KeyUp="Somar"/>

                    <Label Content="Subsolo" Margin="203,149,707,460" Width="90"/>
                    <TextBox x:Name="TB_AdicionarSubsolo" Margin="203,189,707,420" Text="0" Width="90"/>

                    <Label Content="Topo" Margin="298,149,612,460" Width="90"/>
                    <TextBox x:Name="TB_AdicionarTopo" Margin="298,189,612,420" Text="0" Width="90"/>

                    <Label Content="Estado" Margin="18,319,892,290" Width="90"/>
                    <ComboBox x:Name="CB_Estado" Margin="108,319,612,288" IsEditable="True" FontSize="14"/>

                    <Label Content="Objetivo" Margin="18,365,892,244" Width="90"/>
                    <ComboBox x:Name="CB_Objetivo" Margin="108,366,612,240" IsEditable="True" FontSize="14"/>

                    <Label Content="Nome do Job" Margin="18,414,882,195" Width="100"/>
                    <TextBox x:Name="textBox22" Margin="123,414,612,195" Text="#1"/>

                    <Label Content="Data da edificação" Margin="18,459,844,150" Width="138"/>
                    <DatePicker x:Name="dateTimePicker1" Margin="161,459,612,151"/>

                    <DataGrid x:Name="dataGridView4" Margin="392,149,18,420"/>
                    <DataGrid x:Name="dataGridView5" Margin="393,234,18,133"/>
                    <Button Style="{DynamicResource ButtonVoltar}" Height="40" Width="40" Margin="18,540,942,69" Click="B_VoltarJob_Click"/>
                    <Button Style="{DynamicResource ButtonSalvar}" Height="40" Width="40" Margin="18,585,942,24" Click="B_AdicionarSalvar_Click"/>
                    <Button Style="{DynamicResource ButtonImprimir}" Height="40" Width="40" Margin="63,585,897,24" Click="B_ClassficacaoImprimir_Click"/>
                    <DataGrid x:Name="dataGridView6" Margin="108,521,18,10"/>
                    <Button Style="{DynamicResource ButtonProcurar}" Height="40" Width="40" Margin="63,540,897,69" Click="B_Procurar_Click"/>
                </Grid>

            </TabItem>

            <TabItem x:Name="TP_Hidrante" Header="HIDRANTE" FontSize="18">
            </TabItem>


        </TabControl>
        <Button Style="{DynamicResource ButtonInicio}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="40" Width="40" Margin="472,718,0,0" FontSize="14" Click="Voltar_Click" BorderThickness="0,0,0,0" Cursor=""/>
        <Button Style="{DynamicResource ButtonLigar}" Height="40" Margin="517,718,467,10" Click="Fechar_Click" Width="40"/>
        <Label Content="App Yndomynus" Margin="863,718,10,10" Width="151" HorizontalContentAlignment="Right"/>

    </Grid>



    </Window>
